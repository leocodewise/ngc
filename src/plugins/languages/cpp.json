{
    "tokens": [
      {
        "type": "KEYWORD",
        "patterns": [
          "alignas", "alignof", "and", "and_eq", "asm", "auto", "bitand", "bitor", "bool", "break", "case", "catch", "char", "char8_t", "char16_t", "char32_t", "class", "compl", "concept", "const", "consteval", "constexpr", "const_cast", "continue", "co_await", "co_return", "co_yield", "decltype", "default", "delete", "do", "double", "dynamic_cast", "else", "enum", "explicit", "export", "extern", "false", "float", "for", "friend", "goto", "if", "inline", "int", "long", "mutable", "namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "private", "protected", "public", "register", "reinterpret_cast", "requires", "return", "short", "signed", "sizeof", "static", "static_assert", "static_cast", "struct", "switch", "template", "this", "thread_local", "throw", "true", "try", "typedef", "typeid", "typename", "union", "unsigned", "using", "virtual", "void", "volatile", "wchar_t", "while", "xor", "xor_eq"
        ]
      },
      {
        "type": "IDENTIFIER",
        "pattern": "[a-zA-Z_][a-zA-Z0-9_]*"
      },
      {
        "type": "NUMBER",
        "pattern": "[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?([uU]?[lL]{0,2}|[fF])?"
      },
      {
        "type": "OPERATOR",
        "patterns": [
          "+", "-", "*", "/", "%", "==", "!=", "<=", ">=", "<", ">", "=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", "&&", "||", "!", "&", "|", "^", "~", "<<", ">>", "++", "--", "->", "->*", ".*", "?", ":", "::"
        ]
      },
      {
        "type": "PUNCTUATION",
        "patterns": [
          ";", "{", "}", "(", ")", "[", "]", ",", ".", ":", "::", "->", "?", "~"
        ]
      },
      {
        "type": "STRING",
        "pattern": "\"[^\"]*\"|R\"([^\\(\\)]*)\\([\\s\\S]*?\\)\\1\""
      },
      {
        "type": "CHAR",
        "pattern": "'[^']'|'\\\\[nrt0'\"\\\\]'"
      },
      {
        "type": "COMMENT",
        "pattern": "//.*|/\\*[\\s\\S]*?\\*/"
      },
      {
        "type": "PREPROCESSOR",
        "pattern": "#\\s*(include|define|ifdef|ifndef|if|else|elif|endif|pragma|error|warning|line)\\b.*"
      },
      {
        "type": "LITERAL",
        "patterns": [
          "true", "false", "nullptr"
        ]
      },
      {
        "type": "TEMPLATE",
        "patterns": [
          "<", ">", "template"
        ]
      }
    ]
  }